import time
import random
from termcolor import colored, cprint
import pyautogui
from random import randint
def text():
    print("–ü", end='')
    time.sleep(0.04)
    
    print("—Ä", end='')
    time.sleep(0.04)
    
    print("–∏", end='')
    time.sleep(0.04)
    
    print("–≤", end='')
    time.sleep(0.04)
    
    print("–µ", end='')
    time.sleep(0.04)
    
    print("—Ç", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
    
    print("—è", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
    
    print("—Ä", end='')
    time.sleep(0.04)
    
    print("–æ", end='')
    time.sleep(0.04)
    
    print("–±", end='')
    time.sleep(0.04)
    
    print("–æ", end='')
    time.sleep(0.04)
    
    print("—Ç", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
        
    print("–ø", end='')
    time.sleep(0.04)
        
    print("—ã", end='')
    time.sleep(0.04)
    
    print("–ª", end='')
    time.sleep(0.04)
        
    print("–µ", end='')
    time.sleep(0.04)
    
    print("—Å", end='')
    time.sleep(0.04)
        
    print("–æ", end='')
    time.sleep(0.04)
    
    print("—Å", end='')
    time.sleep(0.04)
        
    print(" ", end='')
    time.sleep(0.04)
    
    print("–∏", end='')
    time.sleep(0.04)
        
    print(" ", end='')
    time.sleep(0.04)
    
    print("—è", end='')
    time.sleep(0.04)
        
    print(" ", end='')
    time.sleep(0.04)
    
    print("–ø", end='')
    time.sleep(0.04)
        
    print("–æ", end='')
    time.sleep(0.04)
    
    print("–∫", end='')
    time.sleep(0.04)
        
    print("–∞", end='')
    time.sleep(0.04)
    
    print("–∂", end='')
    time.sleep(0.04)
        
    print("—É", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
        
    print("—á", end='')
    time.sleep(0.04)
    
    print("—Ç", end='')
    time.sleep(0.04)
        
    print("–æ", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
        
    print("–Ω", end='')
    time.sleep(0.04)
    
    print("–∞", end='')
    time.sleep(0.04)
        
    print("–∫", end='')
    time.sleep(0.04)
    
    print("–æ", end='')
    time.sleep(0.04)
        
    print("–¥", end='')
    time.sleep(0.04)
    
    print("–∏", end='')
    time.sleep(0.04)
        
    print("–ª", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
        
    print("–ú", end='')
    time.sleep(0.04)
    
    print("–∞", end='')
    time.sleep(0.04)
        
    print("—Ä", end='')
    time.sleep(0.04)
    
    print("–∫", end='')
    time.sleep(0.04)
        
    print(" ", end='')
    time.sleep(0.04)
    
    print("–∑", end='')
    time.sleep(0.04)
        
    print("–∞", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
        
    print("–≤", end='')
    time.sleep(0.04)
    
    print("—Ä", end='')
    time.sleep(0.04)
        
    print("–µ", end='')
    time.sleep(0.04)
    
    print("–º", end='')
    time.sleep(0.04)
        
    print("—è", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
        
    print("–∏", end='')
    time.sleep(0.04)
    
    print("–∑", end='')
    time.sleep(0.04)
        
    print("—É", end='')
    time.sleep(0.04)
    
    print("—á", end='')
    time.sleep(0.04)
        
    print("–µ", end='')
    time.sleep(0.04)
    
    print("–Ω", end='')
    time.sleep(0.04)
        
    print("–∏", end='')
    time.sleep(0.04)
    
    print("—è", end='')
    time.sleep(0.04)
        
    print(" ", end='')
    time.sleep(0.04)
    
    print("—è", end='')
    time.sleep(0.04)
        
    print("–∑", end='')
    time.sleep(0.04)
    
    print("—ã", end='')
    time.sleep(0.04)
        
    print("–∫", end='')
    time.sleep(0.04)
    
    print("–∞", end='')
    time.sleep(0.04)
        
    print(" ", end='')
    time.sleep(0.04)
    
    print("–ø", end='')
    time.sleep(0.04)
        
    print("—Ä", end='')
    time.sleep(0.04)
    
    print("–æ", end='')
    time.sleep(0.04)
        
    print("–≥", end='')
    time.sleep(0.04)
    
    print("—Ä", end='')
    time.sleep(0.04)
        
    print("–∞", end='')
    time.sleep(0.04)
    
    print("–º", end='')
    time.sleep(0.04)
        
    print("–º", end='')
    time.sleep(0.04)
    
    print("–∏", end='')
    time.sleep(0.04)
        
    print("—Ä", end='')
    time.sleep(0.04)
    
    print("–æ", end='')
    time.sleep(0.04)
        
    print("–≤", end='')
    time.sleep(0.04)
    
    print("–∞", end='')
    time.sleep(0.04)
        
    print("–Ω", end='')
    time.sleep(0.04)
    
    print("–∏", end='')
    time.sleep(0.04)
        
    print("—è", end='')
    time.sleep(0.04)
    
    print(" ", end='')
    time.sleep(0.04)
        
    print("üêç", end='')
    time.sleep(0.04)
    
    print("ùìü", end='')
    time.sleep(0.04)
        
    print("ùîÇ", end='')
    time.sleep(0.04)
    
    print("ùìΩ", end='')
    time.sleep(0.04)
        
    print("ùì±", end='')
    time.sleep(0.04)
    
    print("ùì∏", end='')
    time.sleep(0.04)
        
    print("ùì∑", end='')
    time.sleep(0.04)
    
    print("üêç", end='')
    time.sleep(0.04)
        
    print("!")
    time.sleep(0.04)
def Valuti():
    pyautogui.FAILSAFE=False
    A=0
    B=0
    C=0
    D=0
    F=5
    while(D!=123):
        for step in range(5):
            print(" ")
        print("~~~–í—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –∫–æ–Ω–≤–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å!~~~")
        print("                     –î–æ–ª–ª–∞—Ä")
        print("„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§    –†—É–±–ª—å")
        print("                     –¢–µ–Ω–≥–µ")
        print("                      –Æ–∞–Ω—å")
        print("                      –ï–≤—Ä–æ")
        A=input("–í–≤–µ–¥–∏—Ç–µ –≤–∞–ª—é—Ç—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å: ")
        if A=="–î–æ–ª–ª–∞—Ä":
            B=float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
            print("–í –¥–æ–ª–ª–∞—Ä–∞—Ö —ç—Ç–æ: ",B*1)
            print("–í —Ä—É–±–ª—è—Ö —ç—Ç–æ: ",B*76.20)
            print("–í —Ç–µ–Ω–≥–µ —ç—Ç–æ: ",B*449.89)
            print("–í —é–∞–Ω—è—Ö —ç—Ç–æ: ",B*696.735)
            print("–í –µ–≤—Ä–æ —ç—Ç–æ: ",B*0.9404)
        elif A=="–†—É–±–ª—å":
            B=float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
            print("–í –¥–æ–ª–ª–∞—Ä–∞—Ö —ç—Ç–æ: ",B*0.0131)
            print("–í —Ä—É–±–ª—è—Ö —ç—Ç–æ: ",B*1)
            print("–í —Ç–µ–Ω–≥–µ —ç—Ç–æ: ",B*6.0852)
            print("–í —é–∞–Ω—è—Ö —ç—Ç–æ: ",B*0.0899)
            print("–í –µ–≤—Ä–æ —ç—Ç–æ: ",B*0.0123)
        elif A=="–¢–µ–Ω–≥–µ":
            B=float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
            print("–í –¥–æ–ª–ª–∞—Ä–∞—Ö —ç—Ç–æ: ",B*0.0021)
            print("–í —Ä—É–±–ª—è—Ö —ç—Ç–æ: ",B*0.1643)
            print("–í —Ç–µ–Ω–≥–µ —ç—Ç–æ: ",B*1)
            print("–í —é–∞–Ω—è—Ö —ç—Ç–æ: ",B*0.0148)
            print("–í –µ–≤—Ä–æ —ç—Ç–æ: ",B*0.002)
        elif A=="–Æ–∞–Ω—å":
            B=float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
            print("–í –¥–æ–ª–ª–∞—Ä–∞—Ö —ç—Ç–æ: ",B*0.1452)
            print("–í —Ä—É–±–ª—è—Ö —ç—Ç–æ: ",B*11.1226)
            print("–í —Ç–µ–Ω–≥–µ —ç—Ç–æ: ",B*67.6829)
            print("–í —é–∞–Ω—è—Ö —ç—Ç–æ: ",B*1)
            print("–í –µ–≤—Ä–æ —ç—Ç–æ: ",B*0.1365)
        elif A=="–ï–≤—Ä–æ":
            B=float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
            print("–í –¥–æ–ª–ª–∞—Ä–∞—Ö —ç—Ç–æ: ",B*1.0634)
            print("–í —Ä—É–±–ª—è—Ö —ç—Ç–æ: ",B*81.4635)
            print("–í —Ç–µ–Ω–≥–µ —ç—Ç–æ: ",B*495.7195)
            print("–í —é–∞–Ω—è—Ö —ç—Ç–æ: ",B*7.3241)
            print("–í –µ–≤—Ä–æ —ç—Ç–æ: ",B*1)
        elif A=="BackupKeys":
            print("B@&%LKXX")
            print("H%$&GPXX")
            print("J$@*CDXX")
        elif A=="HackConsole":
                time.sleep(1.3)
                for step in range(100):
                    print(colored("                                                          ", 'green', 'on_black'))
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤.                                          ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..                                         ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...                                        ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤.                                          ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..                                         ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...                                        ", 'green', 'on_black'))
                time.sleep(0.7)
                for step in range(100):
                    print(colored("                                                          ", 'green', 'on_black'))
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏.                                        ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏..                                       ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏...                                      ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏.                                        ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏..                                       ", 'green', 'on_black'))
                time.sleep(0.3)
                print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏...                                      ", 'green', 'on_black'))
                time.sleep(1.3)
                print(colored("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–Ω—Å–æ–ª–∏!:                          ", 'green', 'on_black'))
                C=input(" ")
                if C== "M&*@RK" or C== "B@&%LKXX" or C== "H%$&GPXX" or C== "J$@*CDXX":
                    for step in range(100):
                        print(colored("Is the license real?...                                   ", 'green', 'on_black'))
                    time.sleep(2.0)
                    for step in range(100):
                        print(colored("True                                                      ", 'green', 'on_black'))
                    time.sleep(1.3)
                    for step in range(100):
                        print(colored("                                                          ", 'green', 'on_black'))
                    print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è.                                          ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è..                                         ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è...                                        ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è.                                          ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è..                                         ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è...                                        ", 'green', 'on_black'))
                    time.sleep(1.3)
                    for step in range(100):
                        print(colored("                                                          ", 'green', 'on_black'))
                    print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.                                              ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è..                                             ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...                                            ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.                                              ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è..                                             ", 'green', 'on_black'))
                    time.sleep(0.3)
                    print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...                                            ", 'green', 'on_black'))
                    time.sleep(1.3)
                    for step in range(100):
                        print(colored("                                                          ", 'green', 'on_black'))
                    time.sleep(0.3)
                    for step in range(5):
                        for step in range(100):
                            print(colored("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞  |                 ", 'green', 'on_black'))
                        for step in range(100):
                            print(colored("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞  /                 ", 'green', 'on_black'))    
                        for step in range(100):
                            print(colored("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞  -                 ", 'green', 'on_black'))    
                        for step in range(100):
                            print(colored("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞  \                 ", 'green', 'on_black'))
                    pyautogui.hotkey('win', 'r')
                    pyautogui.write('cmd')
                    pyautogui.press('enter')
                    time.sleep(0.1)
                    pyautogui.write('color 2')
                    pyautogui.press('enter')
                    pyautogui.write('dir/s')
                    pyautogui.press('enter')
                    pyautogui.press('f11')
                    time.sleep(7)
                    pyautogui.hotkey('alt', 'f4')
                    pyautogui.hotkey('win', 'r')
                    pyautogui.write('cmd')
                    pyautogui.press('enter')
                    pyautogui.write('color 2')
                    pyautogui.press('enter')
                    pyautogui.press('f11')
                    pyautogui.write('shutdown -s -t 10 -c "HackConsole!"')
                    pyautogui.press('enter')
                else:
                    print(colored("–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á!                                       ", 'green', 'on_black'))
                    print(colored("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ                            ", 'green', 'on_black'))
                    print(colored("—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–ª—é—á, —É –≤–∞—Å 5 –ø–æ–ø—ã—Ç–æ–∫:                          ", 'green', 'on_black'))
                    for step in range(5):
                        C=input(" ")
                        if C== "M&*@RK" or C== "B@&%LKXX" or C== "H%$&GPXX" or C== "J$@*CDXX":
                            for step in range(100):
                                print(colored("Is the license real?...                                   ", 'green', 'on_black'))
                            time.sleep(2.0)
                            for step in range(100):
                                print(colored("True                                                      ", 'green', 'on_black'))
                            time.sleep(1.3)
                            for step in range(100):
                                print(colored("                                                          ", 'green', 'on_black'))
                            print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è.                                          ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è..                                         ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è...                                        ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è.                                          ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è..                                         ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è...                                        ", 'green', 'on_black'))
                            time.sleep(1.3)
                            for step in range(100):
                                print(colored("                                                          ", 'green', 'on_black'))
                            print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.                                              ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è..                                             ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...                                            ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.                                              ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è..                                             ", 'green', 'on_black'))
                            time.sleep(0.3)
                            print(colored("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...                                            ", 'green', 'on_black'))
                            time.sleep(1.3)
                            for step in range(100):
                                print(colored("                                                          ", 'green', 'on_black'))
                            time.sleep(0.3)
                            for step in range(5):
                                for step in range(100):
                                    print(colored("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞  |                 ", 'green', 'on_black'))
                                for step in range(100):
                                    print(colored("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞  /                 ", 'green', 'on_black'))    
                                for step in range(100):
                                    print(colored("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞  -                 ", 'green', 'on_black'))    
                                for step in range(100):
                                    print(colored("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞  \                 ", 'green', 'on_black'))
                            pyautogui.hotkey('win', 'r')
                            pyautogui.write('cmd')   
                            pyautogui.press('enter')
                            time.sleep(0.1)
                            pyautogui.write('color 2')
                            pyautogui.press('enter')
                            pyautogui.write('dir/s')
                            pyautogui.press('enter')
                            pyautogui.press('f11')
                            time.sleep(7)
                            pyautogui.hotkey('alt', 'f4')
                            pyautogui.hotkey('win', 'r')
                            pyautogui.write('cmd')
                            pyautogui.press('enter')
                            pyautogui.write('color 2')
                            pyautogui.press('enter')
                            pyautogui.press('f11')
                            pyautogui.write('shutdown -s -t 10 -c "HackConsole!"')
                            pyautogui.press('enter')
                        else:
                            print(colored("–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á!                                       ", 'green', 'on_black'))
                            print(colored("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ                            ", 'green', 'on_black'))
                            print(colored("—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–ª—é—á, —É –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫:             ", 'green', 'on_black'))
                    for step in range(100):
                        print(colored("                                                          ", 'green', 'on_black'))
                    print(colored("–í—ã –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–∞–∑,            ", 'green', 'on_black'))
                    print(colored("–≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!!!                    ", 'green', 'on_black'))
                    pyautogui.alert(text="–ø–æ–∂–∏–≤–∏ –∫–∞–∫ –Ω–∏ –±—É–¥—å –±–µ–∑ –º—ã—à–∫–∏ —Ö–∞—Ö–∞—Ö—Ö–∞ -__-, –Ω–µ –Ω—É –∞ —á—ë?", title="Hacker", button='OK')
                    for step in range(10000):
                        pyautogui.moveTo(randint(0, 1000),randint(0,1000))
                        
                        
                    
                    D=123
            
                
                
                
                
        else:
            print("–í —Å–ø–∏—Å–∫–µ –Ω–µ—Ç —Ç–∞–∫–æ–π –≤–∞–ª—é—Ç—ã! ")
def Password():
    def numcheck(parol): 
        nums_here=False
        for sym in parol:
            if sym > "0" and sym < "9":
                nums_here=True
                break
        return nums_here
    def mineBykvi(parol): 
        buk_here=False
        for buk in parol:
            if buk > "a" and buk < "z":
                buk_here=True
                break
        return buk_here
    def mineBykvi(parol): 
        buk_here=False
        for buk in parol:
            if buk > "a" and buk < "z":
                buk_here=True
                break
        return buk_here
    def BigBykvi(parol): 
        buk_here=False
        for buk in parol:
            if buk > "A" and buk < "Z":
                buk_here=True
                break
        return buk_here
    def six(parol): 
        buk_here=False
        for buk in parol:
            if len(parol) > 5:
                buk_here=True
                break
        return buk_here
    def simvol(parol):
        Simvols=["!","%","_","-","+","?","*","@","&","~","#","(",")",",","`","/","\\","|","$","‚Ññ",";"]
        
        simvol_here=False
        for simvol in parol:
            if simvol in Simvols:
                simvol_here=True
                break
        return simvol_here
                



    parol=input("–ü—Ä–∏–¥—É–º–∞–π –ø–∞—Ä–æ–ª—å: ")
    if not numcheck(parol):
        print("–¢–í–û–ô –ü–ê–†–û–õ–¨ –ë–ï–ó —Ü–ò—Ñ–ï—Ä–û–∫!!!")
    if not mineBykvi(parol):
        print("–¢–í–û–ô –ü–ê–†–û–õ–¨ –ë–ï–ó –ú–ê–õ–ï–ù–¨–ö–ò–• –ë—É–ö–æ–í–æ–ö!!!")
    if not BigBykvi(parol):
        print("–¢–í–û–ô –ü–ê–†–û–õ–¨ –ë–ï–ó –ë–û–õ–¨–®–ò–• –ë—É–ö–æ–í–æ–ö!!!")
    if not six(parol):
        print("–¢–í–û–ô –ü–ê–†–û–õ–¨ –ú–ï–ù–¨–®–ï –ß–ï–ú 6 —Å–ò–º–í–æ–õ–æ–í!!!")
    if not simvol(parol):
        print("–¢–í–û–ô –ü–ê–†–û–õ–¨ –ë–ï–ó –°–ø–ï—Ü–ò–ê–ª–¨–ù—ã–• –°–∏–ú–≤–û–ª–û–≤!!!")
def text2():
    for step in range(3):
        print('', "\r ",'', end='')
        print("–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞", end="")
        print('.', end='')
        time.sleep(0.3)
        print('.', end='')
        time.sleep(0.3)
        print('.', end='')
        time.sleep(0.3)
        print('.', end='') 
        print('', "\r ",'–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞', end='')
        print (" ", end='')
        print (" ", end='')
        print (" ", end='')
        print (" ")
def Random():
    def generate():
        num1=random.randint(1,9)
        num2=random.randint(0,9)
        while num1==num2:
            num1=random.randint(1,9)
            num2=random.randint(0,9)
        num3=random.randint(0,9)
        while num2==num3 or num3==num1:
            num3=random.randint(0,9)

        
        return str(num1)+str(num2)+str(num3) 

    def equals(str1, str2):
        if str1==str2:
            return True
        else:
            return False
    B=0
        

    
    A=0
    Zagadano = generate()
    while(B!=100):
        B=B+1
        Razgagano=input("–†–∞–∑–≥–∞–¥–∞–π —á–∏—Å–ª–æ: ")
    if  equals(Zagadano,Razgagano):
        print("–ú–æ–ª–æ–¥–µ—Ü!!!")
    elif equals=="surrender":
        print(num1,num2,num3)
    else:
        print("–¢—ã –Ω–µ —É–≥–∞–¥–∞–ª!")
        
    print("–ó–∞–≥–∞–¥–∞–ª–∏: ", Zagadano)
def Pallindrom():
    def Pallindrom(A):
        for index in range(len(A)//2):
            if A[index] != A[-index-1]:
                return False
        return True


    def Pallindrom2(A,index):
        if index > len(A)/2:
            return("–≠—Ç–æ –ø–∞–ª–ª–∏–Ω–¥—Ä–æ–º! ")
            
        elif A[index] != A[-index-1]:
            return("–≠—Ç–æ –Ω–µ –ø–∞–ª–ª–∏–Ω–¥—Ä–æ–º! ")
        else:
            return (Pallindrom2(A,index+1))
    A=input("–ü–∏—à–∏ —á—ë —Ö–æ—á–µ—à—å: " )
    print(Pallindrom2(A,0))
def Persoonazh():
    Persoonazh={}
    print("")
    print("–î–∞—Ä–æ–≤–∞, —Ç—ã —Å—É–ø–µ—Ä, –≥–∏–ø–µ—Ä, –ø—É–ø–µ—Ä, —Ç—É—Ä–±–æ, –æ–π –∫–æ—Ä–æ—á–µ –∫–∞–∫–æ–π —Ç–æ –ª–µ–≤—ã–π, –∞ –º–æ–∂–µ—Ç –∏ –ø—Ä–∞–≤—ã–π –Ω–æ—Å–æ–∫.\n–ù–æ —Å–µ–π—á–∞—Å –Ω–µ –æ–± —ç—Ç–æ–º! –¢—ã –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –±–æ—Ç–∏–Ω–æ–∫, –æ–π —Ç–æ –µ—Å—Ç—å –ø–µ—Ä—Å–æ–æ–Ω–∞–∂–∞. \n–°–¥–µ–ª–∞–π –µ–º—É –æ–¥–µ–∂–¥—É, —Ä–∞–∑—É–º –∏ 0 iq.")
    print("")
    print("–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã!")
    print("1. Add - –¥–æ–±–∞–≤–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–æ–Ω–∞–∂—É.")
    print("2. Reset - –∏–∑–º–µ–Ω–∏—Ç—å —Ö–∞—Ä–∏–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∏.")
    print("3. Del - —É–¥–∞–ª–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∏.")
    print("4. Print - –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ —Ö–∞—Ä–∞–∫—Ç–∏—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–æ–Ω–∞–∂–∞ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è.")
    print("5. Exit - –≤—ã—Ö–æ–¥.")
    print("")

    Com=input("–ü–µ—Ä–µ–¥–∞–π –±–æ—Ç–∏–Ω–∫—É –∫–æ–º–∞–Ω–¥—É: ")
    while(True):
        print()
        
        if Com=="Add":
            if len(Persoonazh)<10 or len(Persoonazh)==10:
                ArgName=input("–í–≤–µ–¥–∏ –∏–º—è –Ω–æ–≤–æ–π —á–∞—Å—Ç–∏: ")
                ArgIn=input("–î–æ–±–∞–≤—å —á—Ç–æ –±—É–¥–µ—Ç –≤ –Ω–æ–≤–æ–π —á–∞—Å—Ç–∏ –±–æ—Ç–∏–Ω–∫–∞: ")
                Persoonazh[ArgName]=ArgIn
            else:
                print("–ë–æ—Ç–∏–Ω–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –≤–º–µ—Å—Ç–∏—Ç—å –≤ —Å–µ–±—è –±–æ–ª—å—à–µ 10 –¥–µ—Ç–∞–ª–µ–π")
        elif Com=="Reset":
            ArgName=input("–ò–∑–º–µ–Ω–∏ —á–∞—Å—Ç—å —Å–≤–æ–µ–≥–æ –±–æ—Ç–∏–Ω–∫–∞, –Ω–æ —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏ –∏–º—è –µ–≥–æ —á–∞—Å—Ç–∏: ")
            isExist=False
            for key in Persoonazh:
                if key ==ArgName:
                    isExist=True
                    break
            
            if isExist==True:
                ArgIn=input("–ò–∑–º–µ–Ω—è–π —á–∞—Å—Ç—å –±–æ—Ç–∏–Ω–∫–∞: ")
                Persoonazh[ArgName]=ArgIn
            else:
                print("–£ –±–æ—Ç–∏–Ω–∫–∞ –Ω–µ—Ç—É —Ç–∞–∫–æ–π —á–∞—Å—Ç–∏, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –µ—ë —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã Add!")
            
            
        elif Com=="Del":
            ArgName=input("–í–≤–µ–¥–∏ –∏–º—è —á–∞—Å—Ç–∏ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å: ")
            del Persoonazh[ArgName]
        elif Com=="Print":
            print(Persoonazh.keys())
            print(Persoonazh.values())
        elif Com=="Exit":
            pyautogui.hotkey('ctrl', 'f2')
        else:
            print("–¢—ã –¥–∞–ª –±–æ—Ç–∏–Ω–∫—É –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É '_'")
            print("")
        Com=input("–ü–µ—Ä–µ–¥–∞–π –±–æ—Ç–∏–Ω–∫—É –∫–æ–º–∞–Ω–¥—É: ")
        
#---------------------------------------------------------------------–ü—Ä–æ–≤–µ—Ä–∫–∞-–∫–æ–º–∞–Ω–¥----------------------------------------------------------------------
    
Comm=0
text()
print()
print("-----------------------------–ù–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∫–æ–º–∞–Ω–¥—ã-----------------------------")
print("1. Password - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.")
print("2. Random -  —É–≥–∞–¥–∞–π —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Ç—Ä—ë—Ö –∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ –∑–∞ 100 –ø–æ–ø—ã—Ç–æ–∫.")
print("3. Pallindrom - –ø—Ä–æ–≤–µ—Ä—å —Å–ª–æ–≤–æ –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º.")
print("4. Personazh - —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–æ–Ω–∞–∂–∞.")
print("5. Currencies - –∫–æ–Ω–≤–µ–Ω—Ç—Ä –≤–∞–ª—é—Ç.")
print("6. Added - —á—Ç–æ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö.")
print("7. Exit - –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞.")
print()
Comm=input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É: ")

while(Comm!="Exit"):
    if Comm=="Password":
        Comm=0
        text2()
        Password()
    elif Comm=="Random":
        Comm=0
        text2()
        Random()
    elif Comm=="Pallindrom":
        Comm=0
        text2()
        Pallindrom()
    elif Comm=="Personazh":
        Comm=0
        text2()
        Persoonazh()
    elif Comm=="Currencies":
        Comm=0
        text2()
        Valuti()        
#_________________________________________–ö–æ–º–∞–Ω–¥—ã_–∏_—Å–ø–µ—Ü._Comm_________________________________________
    elif Comm=="Added":
        Comm=0
        Added=["Added the ability to surrender in Random","Added 100 attempts to Random","In the Personazh, the exit is performed through the hotkeys ctrl + f2","Command list added to Personazh"]
        print(Added)
    elif Comm==0:
        Comm=input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É: ")
    else:
        Comm=0
        print("–¢–∞–∫–æ–≥–æ –∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        Comm=input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É: ")
        
        
